/*
 * CHANGELOG.
 */

09132001 - Initial spec proposed on SDL mailing list, under name "SDL_voice".
09142001 - Changed name to SDL_sound, added Sound_DecodeAll() to spec.
09172001 - Changed some overlooked "voice" to "sound". Implemented base API.
           So...tired. Everything's different.  :)
           Also put in a RAW decoder and a simple test program.
09182001 - Implemented MP3 support through SMPEG (not working yet, though) and
           wrote the Reference Counting RWops wrapper. Added other little
           things like the _D(()) macro. Added VOC support, which went up with
           surprisingly little struggle, which means it MUST be leaking
           memory.  :)
09192001 - Added a skeleton decoder source file. Changed voc_read() to
           voc_read_waveform(), so it wouldn't be confused with VOC_read().
           Fixed a byte ordering bug in voc.c (reported as AUDIO_S16LSB, but
           we were swapping byte order of data ourselves. Fixed). Added basic
           .WAV support. Fixed Makefile so that -I. is always first;
           otherwise, a previously installed header might get used for the
           compiles, which is not good. SDL_sound.h now includes SDL_endian.h,
           since SDL.h doesn't, for some reason. Moved version defines in
           SDL_sound.h to top of file so I can find them.  :)
           Changed version to 0.1.1. Committed patch from Tsuyoshi Iguchi to
           fix a segfault (I forgot to put a NULL terminator at the end of
           the available_decoders array), fixing the only bug preventing the
           test program from running on FreeBSD 4.3. Sweet. Added Ogg Vorbis
           decoder. Rewrote the test program's SDL audio callback to be more
           robust (Ogg exposed a nasty bug in it). Fixed a byte-ordering issue
           in the VOC decoder.
09202001 - Torbjörn Andersson submitted several patches: fixed a comment in
           the .WAV decoder (whoops...screwed up my own search-and-replace.
           Hah.), made an attempt at putting multiple sound streams behind
           one RWops (gotta think on that one first), and, most importantly,
           added an AIFF decoder, which is very cool.
09222001 - Torbjörn Andersson strikes again, with a collection of patches.
           First, some cosmetic tweaks for decoders/aiff.c. Next, a MOD player
           based on MikMod. This inspired me to add two more methods to
           Sound_DecoderFunctions: init() and quit(). Third, a fix to
           decoders/mp3.c so that SMPEG won't claim every stream it sees, MP3
           or not. I removed the multiple-streams-per-rwops code, after
           discussion on the mailing list. The init() and quit() methods
           led to the possibility that certain decoders will flag themselves
           as unavailable at runtime, and SDL_sound now handles this.
           Added [LIB|INC]PATH_[OGG|MOD]. Bigendian fixes; now works on
           PowerPC Linux. MikMod tweaks. Changed version to 0.1.2.
09242001 - Thank goodness, Torbjörn came through with the MP3 fix. Apparently
           SMPEG mixes each chunk of decoded data with whatever is already
           in the buffer you give it. I hate that. I'm going to patch SMPEG
           to let the programmer enable and disable that behaviour in a given
           (SMPEG *), since it's just a CPU eater in this case. The _D(())
           macro is now SNDDBG(()), since _D is taken on MacOS X's version of
           gcc (which was bound to happen on some platform sooner than later
           anyhow). Renamed test_sdlsound to playsound, and made it more
           robust in general: fixed potential overflow in audio_callback,
           made it chatter less, made it take multiple files and some other
           command lines. Initial autoconf support, thanks to Max Horn.
09252001 - More autoconf work. Gave Max Horn write access to the CVS
           repository, so I don't drive him nuts tweaking this thing.  :)
           Fixed a const complaint and some other stuff needed for compilation
           under Visual C++ 6.0 (no, it isn't ported yet). Put the SHN source
           in CVS, even though it isn't ready (and doesn't even compile). Do
           NOT enable it in your build!
10012001 - Fixed a memory leak that Torbjörn found in the MOD decoder.
10022001 - Changed a comment in mod.c to not refer to "the mikmod 
           directory" anymore. Committed Torbjörn's patch for MP3 detection.
           (better late than never). __Sound_strcasecmp() now handles NULL
           strings gracefully, fixing the crash with "playsound bootstrap".
           More work on the SHN decoder.
10032001 - After hours of tracking down a bogus pointer, the SHN decoder works!
           I can die happy. :)  Max placated me with an --enable-debug option
           so I could stop my whining. Other autoconf goodies (such as
           reenabling -Werror for debug builds, etc). Torbjörn brings in a
           MIDI decoder, which reads from a Timidity process through a pipe.
           Changed playsound to open the audio device to match the properties
           of each sound file, which results in less conversion (and therefore,
           more chance of correct playback).
10042001 - Changed some #if (defined SOUND_SUPPORTS_*) lines to
           #ifdef SOUND_SUPPORTS_* in voc.c and shn.c, for consistency with
           the other decoders.
10052001 - Removed #include "SDL_endian" from aiff.c.
10062001 - Made a change to SDL_sound.c for compiling on non-GNU toolchains.
10072001 - Changed the way decoders/mod.c handles samplerate so that it should
           work universally. This isn't an idea solution, but it's probably
           the best we can do without rewriting mikmod. Made a change to ogg.c
           for portability: changed an int64_t to ogg_int64_t.

--ryan. (icculus@clutteredmind.org)

/* end of CHANGELOG ... */

